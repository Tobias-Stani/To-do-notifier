{% extends 'extends/iboxContent.html.twig' %}

{% block tituloPagina %} Tareas {% endblock %}

{% block contenidoIbox %}

    <a class="btn" style="margin-top: 10px; background-color: #C1CFA1; color: white;" href="{{ path('app_tarea_new') }}">Crear nueva tarea</a>

    <div style="max-width: 1200px; margin: 0 auto;">
        <div id="calendar"></div>
    </div>

    <style>
        body {
            display: flex;           
            flex-direction: column;    
            align-items: center;        
            justify-content: center;    
            height: 100vh;
        }
        
        /* Personalizar los títulos del calendario */
        .fc-toolbar-title {
            font-size: 1rem; 
            font-weight: bold;
        }
        
        .fc-event {
            background-color: #EDE8DC !important; 
            border: none !important; 
            color: #ffffff !important; 
            font-weight: bold; 
            padding: 5px; 
            border-radius: 5px; 
        }
        
        .fc-daygrid-day:hover {
            background-color: #EAD8B1 !important; 
            cursor: pointer; 
            transition: background-color 0.3s ease;
        }
        
        /* Estilo para el cronómetro */
        .clock-container {
            margin-top: 30px;
            max-width: 1200px;
            margin-bottom: 30px;
            background-color: #080808;
            border-radius: 5px;
            padding: 60px 10px;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
        .clock-col {
            text-align: center;
            min-width: 60px; 
            position: relative;
            margin-right: 10px; 
        }
        
        .clock-col:last-child {
            margin-right: 0; 
        }
        
        .clock-timer {
            color: #fff;
            font-size: 4.2rem;
            text-transform: uppercase;
        }
            
        .clock-label {
            color: rgba(255, 255, 255, .35);
            text-transform: uppercase;
            font-size: .7rem;
            margin-top: 10px;
        }
        
        /* Botones para el cronómetro */
        .btn-cronometro {
            margin: 10px;
            padding: 10px 30px;
            background-color: #C1CFA1;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        
        .btn-cronometro:hover {
            background-color: #A5B68D;
        }
        
        /* Contenedor para los botones */
        .buttons-container {
            display: flex;            
            justify-content: center;   
            margin-top: 20px;          
        }
        
        @media (min-width: 1200px) {
            .clock-container {
                justify-content: center; 
                margin-top: 50px; 
            }
        }
        
    </style>
    

    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.css" rel="stylesheet">

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var events = {{ events|raw }};
            
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                events: events,
                editable: true,

                dateClick: function(info) {
                    window.location.href = "{{ path('app_tarea_new') }}?fecha=" + info.dateStr;
                },

                eventClick: function(info) {
                    alert('Tarea: ' + info.event.title);
                }
            });
            calendar.render();
        });
    </script>

    <!-- Tabla de las tareas de la semana actual -->
    <h2 style="margin-top: 20px;">Tareas de esta semana</h2>
    <table class="table">
        <thead>
            <tr>
                <th>Título</th>
                <th>Descripción</th>
                <th>Fecha</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
        {% for tarea in tareasSemana %}
            <tr>
                <td>{{ tarea.titulo }}</td>
                <td>{{ tarea.descripcion }}</td>
                <td>{{ tarea.fecha ? tarea.fecha|date('Y-m-d') : '' }}</td>
                <td>
                    <a href="{{ path('app_tarea_show', {'id': tarea.id}) }}">Ver</a>
                    <a href="{{ path('app_tarea_edit', {'id': tarea.id}) }}">Editar</a>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="5">No hay registros.</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

    <div class="clock-container">
        <div class="clock-col">
            <p class="clock-day clock-timer">Mon</p> 
            <p class="clock-label">Day</p>
        </div>
        <div class="clock-col">
            <p class="clock-hours clock-timer">0</p>
            <p class="clock-label">Hours</p>
        </div>
        <div class="clock-col"> 
            <p class="clock-timer">:</p> 
        </div>
        <div class="clock-col">
            <p class="clock-minutes clock-timer">0</p>
            <p class="clock-label">Minutes</p>
        </div>
        <div class="clock-col"> 
            <p class="clock-timer">:</p> 
        </div>
        <div class="clock-col">
            <p class="clock-seconds clock-timer">0</p>
            <p class="clock-label">Seconds</p>
        </div>
    </div>

    <div class="buttons-container">
        <button class="btn-cronometro" id="start">Iniciar</button>
        <button class="btn-cronometro" id="pause">Pausar</button>
        <button class="btn-cronometro" id="reset">Reiniciar</button>
        <button class="btn-cronometro" id="finish">Finalizar</button> 
    </div>

    <script src="https://cdn.jsdelivr.net/npm/moment/min/moment.min.js"></script>
    <script>
        let timer;
        let isRunning = false;
        let seconds = 0;
    
        function updateDisplay() {
            const hours = Math.floor((seconds % (3600 * 24)) / 3600);
            const minutes = Math.floor((seconds % 3600) / 60);
            const secs = seconds % 60;
    
            const dayName = moment().format('dddd');
            document.querySelector('.clock-day').textContent = dayName;
            document.querySelector('.clock-hours').textContent = hours;
            document.querySelector('.clock-minutes').textContent = minutes;
            document.querySelector('.clock-seconds').textContent = secs;
        }
    
        function startTimer() {
            if (!isRunning) {
                isRunning = true;
                timer = setInterval(() => {
                    seconds++;
                    updateDisplay();
                }, 1000);
            }
        }
    
        function pauseTimer() {
            if (isRunning) {
                clearInterval(timer);
                isRunning = false;
            }
        }
    
        function resetTimer() {
            clearInterval(timer);
            isRunning = false;
            seconds = 0;
            updateDisplay();
        }
    
        function finishTimer() {
            pauseTimer(); // Pausa el cronómetro al finalizar
            const csrfToken = '{{ csrf_token('finish_timer') }}'; // Si usas un token CSRF, ajusta aquí
    
            // Enviar tiempo transcurrido al servidor
            fetch('{{ path('app_cronometro_finish') }}', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-Token': csrfToken // Enviar token CSRF, si es necesario
                },
                body: JSON.stringify({ timeElapsed: seconds })
            })
            .then(response => {
                if (response.ok) {
                    return response.json();
                }
                throw new Error('Error en la solicitud');
            })
            .then(data => {
                alert('Tiempo registrado: ' + seconds + ' segundos');
                resetTimer(); // Reiniciar el cronómetro tras finalizar
            })
            .catch(error => console.error('Error:', error));
        }
    
        document.getElementById('start').addEventListener('click', startTimer);
        document.getElementById('pause').addEventListener('click', pauseTimer);
        document.getElementById('reset').addEventListener('click', resetTimer);
        document.getElementById('finish').addEventListener('click', finishTimer); // Evento para el botón Finalizar
    
        updateDisplay(); // Mostrar el día actual en la carga
    </script>

{% endblock %}
