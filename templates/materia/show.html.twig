{% extends 'extends/iboxContent.html.twig' %}

{% block title %}{{ materium.nombre }}{% endblock %}

{% block script %}
<!-- Modern UI Dependencies -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
<link href="https://cdn.datatables.net/1.13.5/css/jquery.dataTables.min.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>
{% endblock %}

{% macro format_time(ms) %}
{% set seconds = ms / 1000 %}
{% set minutes = seconds / 60 %}
{% set hours = minutes / 60 %}
{% set display_seconds = seconds % 60 %}
{% set display_minutes = minutes % 60 %}
{% set display_hours = hours % 24 %}
{{ '%02d:%02d:%02d'|format(display_hours, display_minutes, display_seconds) }}
{% endmacro %}

{% block contenidoIbox %}
<link rel="stylesheet" href="{{ asset('../assets/styles/materia/show.css') }}">    

<div class="page-container">
    <!-- Header Section -->
    <div class="page-header">
        <h1 class="page-title">{{ materium.nombre }}</h1>
        <a href="{{ path('app_tarea_new') }}" class="custom-button">
            <i class="fas fa-plus"></i> Nueva tarea
        </a>
    </div>

    <!-- Main Content -->
    <div class="two-column-layout">
        <!-- Left Column: Calendar and Tasks -->
        <div class="section-container left-column">
            <!-- Calendar Card -->
            <div class="card shadow-sm mb-4">
                <div class="card-body">
                    <div class="calendar-container" id="calendar"></div>
                </div>
            </div>

            <!-- Tasks Card -->
            <div class="card shadow-sm">
                <div class="card-header bg-white py-3 border-bottom">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="d-flex align-items-center">
                            <h2 class="h5 mb-0" style="font-size:19px; margin-left:2%;">Tareas de la Semana</h2>
                        </div>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th class="px-4">
                                        T√≠tulo
                                    </th>
                                    <th>
                                        <i class="fas fa-align-left me-2 text-muted"></i>Descripci√≥n
                                    </th>
                                    <th>
                                        <i class="far fa-calendar me-2 text-muted"></i>Fecha
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for tarea in tareasSemana %}
                                    <tr class="align-middle">
                                        <td class="px-4 fw-medium">{{ tarea.titulo }}</td>
                                        <td>
                                            <span class="text-muted">
                                                {{ tarea.descripcion|length > 100 ? tarea.descripcion|slice(0, 100) ~ '...' : tarea.descripcion }}
                                            </span>
                                        </td>
                                        <td>
                                            {% if tarea.fecha %}
                                                <span class="badge bg-light text-dark border">
                                                    <i class="far fa-calendar me-1"></i>
                                                    {{ tarea.fecha|date('d-m-Y') }}
                                                </span>
                                            {% else %}
                                                <span class="badge bg-secondary">Sin fecha</span>
                                            {% endif %}
                                        </td>
                                    </tr>
                                {% else %}
                                    <tr>
                                        <td colspan="3" class="text-center py-5">
                                            <div class="empty-state">
                                                <i class="fas fa-tasks fa-3x text-muted mb-3"></i>
                                                <p class="text-muted mb-0">No hay tareas esta semana</p>
                                            </div>
                                        </td>
                                    </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Right Column: Timer -->
        <div class="section-container right-column">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h2 class="timer-section-title">Tiempos de estudio</h2>
                    <div class="timer-container" id="timerContainer">
                        <div class="timer-display" id="display">00:00:00</div>

                        <div class="timer-controls">
                            <button class="timer-button start-button" id="startBtn">
                                <i class="fas fa-play"></i> Iniciar
                            </button>
                            <button class="timer-button stop-button" id="stopBtn">
                                <i class="fas fa-pause"></i> Detener
                            </button>
                            <button class="timer-button reset-button" id="resetBtn">
                                <i class="fas fa-redo"></i> Reiniciar
                            </button>
                            <a href="{{ path('goalHoursStudy', { id: materium.id }) }}" class="btn btn-primary timer-button reset-button">
                                Definir Meta de Horas de Estudio
                            </a>
                        </div>

                        <div class="timer-laps">
                            <!-- Laps will be added here dynamically -->
                        </div>

                        <div class="timer-history">
                            <h3 class="timer-history-title">Historial de tiempos</h3>
                            {% if timers is empty %}
                                <div class="empty-state">
                                    <i class="fas fa-clock empty-icon"></i>
                                    <p>No hay registros de tiempo a√∫n</p>
                                    <span class="empty-subtitle">Los tiempos de estudio aparecer√°n aqu√≠</span>
                                </div>
                            {% else %}
                                <div class="timer-table-container">
                                    <table class="timer-table">
                                        <thead>
                                            <tr>
                                                <th><i class="fas fa-stopwatch"></i> Tiempo</th>
                                                <th><i class="fas fa-calendar"></i> Fecha</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            {% for timer in timers|slice(0, 5) %}
                                                <tr class="timer-entry">
                                                    <td class="timer-time">
                                                        <span class="time-badge">
                                                            {{ _self.format_time(timer.time) }}
                                                        </span>
                                                    </td>
                                                    <td class="timer-date">
                                                        {{ timer.date|date('d/m/Y') }}
                                                    </td>
                                                </tr>
                                            {% endfor %}
                                        </tbody>
                                    </table>
                                </div>
                                {% if timers|length > 5 %}
                                    <div class="view-all-container">
                                        <button class="view-all-button">
                                            Ver todo el historial
                                            <i class="fas fa-chevron-right"></i>
                                        </button>
                                    </div>
                                {% endif %}
                            {% endif %}

                            <div class="time-totals-container">
                                <div class="total-time-week">
                                    <h3>
                                        <span class="emoji-title">üìÖ</span>
                                        Tiempo total de esta semana
                                    </h3>
                                    <p>{{ totalTimeSemana.hours }} horas y {{ totalTimeSemana.minutes }} minutos</p>
                                    
                                    <div class="progress-container">
                                        <div class="progress-info">
                                            <span>Progreso semanal</span>
                                            <span>{{porcentajeSemanal}}%</span>
                                        </div>
                                        <div class="progress-bar-container">
                                            <div class="progress">
                                                <div class="progress-bar" style="width: {{ porcentajeSemanal }}%" role="progressbar" 
                                                     aria-valuenow="{{ porcentajeSemanal }}" aria-valuemin="0" aria-valuemax="100">
                                                </div>
                                    </div>
                                        </div>
                                        <div class="progress-label">
                                            Objetivo: {{tiempoObjetivoSemanal}} horas
                                        </div>
                                    </div>
                                </div>
                            
                                <div class="total-time-day">
                                    <h3>
                                        <span class="emoji-title">‚åö</span>
                                        Tiempo total de hoy
                                    </h3>
                                    <p>{{ totalTimeDia.hours }} horas y {{ totalTimeDia.minutes }} minutos</p>
                                    
                                    <div class="progress-container">
                                        <div class="progress-info">
                                            <span>Progreso diario</span>
                                            <span>{{porcentajeDiario}}%</span>
                                        </div>
                                        <div class="progress-bar-container">
                                            <div class="progress">
                                                <div class="progress-bar" style="width: {{ porcentajeDiario }}%" role="progressbar" 
                                                     aria-valuenow="{{ porcentajeDiario }}" aria-valuemin="0" aria-valuemax="100">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="progress-label">
                                            Objetivo: {{tiempoObjetivoDiario}} horas
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Navigation Links -->
    <div class="navigation-links">
        <a href="{{ path('app_materia_index') }}" class="custom-button">
            <i class="fas fa-arrow-left"></i> Volver
        </a>
        <a href="{{ path('app_materia_edit', {'id': materium.id}) }}" class="custom-button">
            <i class="fas fa-edit"></i> Editar
        </a>
        {{ include('materia/_delete_form.html.twig') }}
    </div>
</div>

    <!-- Calendar Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.css" rel="stylesheet">

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Obtiene los eventos y los ID de materia de la plantilla
            var events = {{ events|raw }};
            var materiaId = {{ materium.id }}; // Aseg√∫rate de que 'materium' es un objeto con el ID de la materia
            var calendarEl = document.getElementById('calendar');
    
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                events: events, // Aqu√≠ se cargar√°n solo las tareas filtradas por ID de materia
                editable: true,
                height: 'auto',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                dateClick: function(info) {
                    // Redirigir a la p√°gina de nueva tarea con materiaId y fecha
                    window.location.href = "{{ path('app_tarea_new') }}?fecha=" + info.dateStr + "&materiaId=" + materiaId;
                },
                eventClick: function(info) {
                    // Mejorar la visualizaci√≥n del evento
                    Swal.fire({
                        title: info.event.title,
                        text: info.event.extendedProps.description || 'Sin descripci√≥n',
                        icon: 'info'
                    });
                }
            });
    
            calendar.render();
        });
    </script>

    <script>
        const materiaId = {{ materium.id }};
    </script>    
    
    <!-- Timer Script -->
    <script>
        let timerInterval;
        let running = false;
        let startTime;
        let elapsedTime = 0;
        let laps = [];

        const display = document.getElementById('display');
        const startBtn = document.getElementById('startBtn');
        const stopBtn = document.getElementById('stopBtn');
        const resetBtn = document.getElementById('resetBtn');
        const timerContainer = document.getElementById('timerContainer');

        function formatTime(ms) {
            const date = new Date(ms);
            return date.toISOString().substr(11, 8);
        }

        startBtn.addEventListener('click', () => {
            if (!running) {
                running = true;
                startTime = Date.now() - elapsedTime;
                timerInterval = setInterval(updateDisplay, 10);
                timerContainer.classList.add('timer-running');
                startBtn.innerHTML = '<i class="fas fa-pause"></i> Pausar';
            } else {
                clearInterval(timerInterval);
                running = false;
                timerContainer.classList.remove('timer-running');
                startBtn.innerHTML = '<i class="fas fa-play"></i> Reanudar';
            }
        });

        stopBtn.addEventListener('click', () => {
            if (running) {
                clearInterval(timerInterval);
                running = false;
                addLap();
                timerContainer.classList.remove('timer-running');
                startBtn.innerHTML = '<i class="fas fa-play"></i> Iniciar';
        
                // Aqu√≠ es donde enviamos el tiempo a la base de datos
                const materiaId = {{ materium.id }}; // El ID de la materia actual
                const time = elapsedTime; // El tiempo que queremos guardar
        
                // Enviar el tiempo al backend usando fetch (AJAX)
                fetch(`/materia/${materiaId}/cronometro`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'X-Requested-With': 'XMLHttpRequest',
                    },
                    body: `time=${time}`
                })
                .then(response => response.json())
                .then(data => {
                    if (data.status === 'success') {
                        console.log('Tiempo guardado exitosamente');
                    } else {
                        console.error('Error al guardar el tiempo');
                    }
                })
                .catch(error => console.error('Error en la solicitud:', error));
            }
        });
        

        resetBtn.addEventListener('click', () => {
            clearInterval(timerInterval);
            running = false;
            elapsedTime = 0;
            display.textContent = '00:00:00';
            laps = [];
            updateLaps();
            timerContainer.classList.remove('timer-running');
            startBtn.innerHTML = '<i class="fas fa-play"></i> Iniciar';
        });

        function updateDisplay() {
            elapsedTime = Date.now() - startTime;
            display.textContent = formatTime(elapsedTime);
        }

        function addLap() {
            laps.push(elapsedTime);
            updateLaps();
        }

        function updateLaps() {
            const lapsContainer = document.querySelector('.timer-laps');
            lapsContainer.innerHTML = laps.map((lap, index) => `
                <div class="lap-item">
                    <span class="lap-number">#${index + 1}</span>
                    <span class="lap-time">${formatTime(lap)}</span>
                </div>
            `).join('');
        }
    </script>
{% endblock %}