{% extends 'extends/iboxContent.html.twig' %}

{% block title %}{{ materium.nombre }}{% endblock %}

{% block script %}
    <!-- Modern UI Dependencies -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.datatables.net/1.13.5/css/jquery.dataTables.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>
{% endblock %}

{% block contenidoIbox %}
    <style>
        :root {
            --primary-color: #34495e;         /* Azul oscuro */
            --secondary-color: #3498db;       /* Azul claro */
            --accent-color: #2ecc71;          /* Verde */
            --dark-color: #2c3e50;            /* Azul muy oscuro */
            --light-color: #ecf0f1;           /* Gris muy claro */
            --danger-color: #e74c3c;          /* Rojo */
            --text-color: #2c3e50;            /* Color texto principal */
            --text-light: #7f8c8d;            /* Color texto secundario */
            --shadow-color: rgba(0, 0, 0, 0.1);
        }

        /* Layout & Container Styles */
        .page-container {
            padding: 2rem;
            background-color: var(--light-color);
        }

        .two-column-layout {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            margin-top: 2rem;
        }

        .section-container {
            background: white;
            border-radius: 15px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 4px 6px var(--shadow-color);
            height: fit-content;
        }

        /* Header Styles */
        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            padding: 1rem 2rem;
            background: white;
            border-radius: 15px;
            box-shadow: 0 4px 6px var(--shadow-color);
        }

        .page-title {
            font-size: 2rem;
            color: var(--primary-color);
            font-weight: 700;
            margin: 0;
        }

        /* Button Styles */
        .custom-button {
            padding: 0.8rem 1.5rem;
            border-radius: 8px;
            border: none;
            font-weight: 600;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            background-color: var(--secondary-color);
            color: white;
        }

        .custom-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px var(--shadow-color);
            background-color: var(--primary-color);
        }

        /* Calendar Styles */
        .calendar-container {
            height: 100%;
        }

        .fc-toolbar-title {
            font-size: 1.2rem !important;
            font-weight: 600 !important;
            color: var(--primary-color) !important;
        }

        .fc-event {
            background-color: var(--secondary-color) !important;
            border: none !important;
            padding: 0.5rem !important;
            border-radius: 6px !important;
            box-shadow: 0 2px 4px var(--shadow-color) !important;
        }

        .fc-daygrid-day:hover {
            background-color: var(--light-color) !important;
            cursor: pointer;
        }

        .fc-button-primary {
            background-color: var(--secondary-color) !important;
            border-color: var(--secondary-color) !important;
        }

        .fc-button-primary:hover {
            background-color: var(--primary-color) !important;
            border-color: var(--primary-color) !important;
        }

        /* Timer Styles */
        .timer-container {
            background: white;
            border-radius: 15px;
            padding: 2rem;
            height: 100%;
        }

        .timer-section-title {
            color: var(--primary-color);
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 1.5rem;
            text-align: center;
        }

        .timer-display {
            background: var(--dark-color);
            color: var(--accent-color);
            font-family: 'Courier New', monospace;
            font-size: 3rem;
            padding: 1.5rem;
            border-radius: 12px;
            text-align: center;
            margin-bottom: 1.5rem;
            box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
        }

        .timer-controls {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .timer-button {
            padding: 1rem;
            border-radius: 8px;
            border: none;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
            transition: all 0.3s ease;
            color: white;
        }

        .start-button {
            background: var(--accent-color);
        }

        .stop-button {
            background: var(--danger-color);
        }

        .reset-button {
            background: var(--secondary-color);
            grid-column: span 2;
        }

        .timer-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px var(--shadow-color);
            opacity: 0.9;
        }

        .timer-laps {
            background: var(--light-color);
            border-radius: 8px;
            padding: 1rem;
            max-height: 200px;
            overflow-y: auto;
        }

        .lap-item {
            display: flex;
            justify-content: space-between;
            padding: 0.8rem;
            border-bottom: 1px solid #dee2e6;
            font-family: 'Courier New', monospace;
            animation: fadeIn 0.3s ease;
        }

        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.02); }
            100% { transform: scale(1); }
        }

        .timer-running .timer-display {
            animation: pulse 1s infinite;
        }

        /* Navigation Links */
        .navigation-links {
            display: flex;
            gap: 1rem;
            margin-top: 2rem;
        }

        /* Responsive Design */
        @media (max-width: 1024px) {
            .two-column-layout {
                grid-template-columns: 1fr;
            }
            
            .timer-container {
                margin-top: 2rem;
            }
        }

        @media (max-width: 768px) {
            .page-container {
                padding: 1rem;
            }

            .page-header {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
                padding: 1rem;
            }

            .timer-display {
                font-size: 2.5rem;
            }
        }
    </style>

    <div class="page-container">
        <!-- Header Section -->
        <div class="page-header">
            <h1 class="page-title">{{ materium.nombre }}</h1>
            <a href="{{ path('app_tarea_new') }}" class="custom-button">
                <i class="fas fa-plus"></i> Nueva tarea
            </a>
        </div>

        <!-- Two Column Layout -->
        <div class="two-column-layout">
            <!-- Calendar Column -->
            <div class="section-container">
                <div class="calendar-container" id="calendar"></div>
            </div>

            <!-- Timer Column -->
            <div class="section-container">
                <h2 class="timer-section-title">Tiempos de estudio</h2>
                <div class="timer-container" id="timerContainer">
                    <div class="timer-display" id="display">00:00:00</div>
                    
                    <div class="timer-controls">
                        <button class="timer-button start-button" id="startBtn">
                            <i class="fas fa-play"></i> Iniciar
                        </button>
                        <button class="timer-button stop-button" id="stopBtn">
                            <i class="fas fa-pause"></i> Detener
                        </button>
                        <button class="timer-button reset-button" id="resetBtn">
                            <i class="fas fa-redo"></i> Reiniciar
                        </button>
                    </div>

                    <div class="timer-laps">
                        <!-- Laps will be added here dynamically -->
                    </div>
                </div>
            </div>
        </div>

        <!-- Navigation Links -->
        <div class="navigation-links">
            <a href="{{ path('app_materia_index') }}" class="custom-button">
                <i class="fas fa-arrow-left"></i> Volver
            </a>
            <a href="{{ path('app_materia_edit', {'id': materium.id}) }}" class="custom-button">
                <i class="fas fa-edit"></i> Editar
            </a>
            {{ include('materia/_delete_form.html.twig') }}
        </div>
    </div>

    <!-- Calendar Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.css" rel="stylesheet">

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var events = {{ events|raw }};
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                events: events,
                editable: true,
                height: 'auto',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                dateClick: function(info) {
                    window.location.href = "{{ path('app_tarea_new') }}?fecha=" + info.dateStr;
                },
                eventClick: function(info) {
                    // Mejorar la visualización del evento
                    Swal.fire({
                        title: info.event.title,
                        text: info.event.extendedProps.description || 'Sin descripción',
                        icon: 'info'
                    });
                }
            });
            calendar.render();
        });
    </script>

    <!-- Timer Script -->
    <script>
        let timerInterval;
        let running = false;
        let startTime;
        let elapsedTime = 0;
        let laps = [];

        const display = document.getElementById('display');
        const startBtn = document.getElementById('startBtn');
        const stopBtn = document.getElementById('stopBtn');
        const resetBtn = document.getElementById('resetBtn');
        const timerContainer = document.getElementById('timerContainer');

        function formatTime(ms) {
            const date = new Date(ms);
            return date.toISOString().substr(11, 8);
        }

        startBtn.addEventListener('click', () => {
            if (!running) {
                running = true;
                startTime = Date.now() - elapsedTime;
                timerInterval = setInterval(updateDisplay, 10);
                timerContainer.classList.add('timer-running');
                startBtn.innerHTML = '<i class="fas fa-pause"></i> Pausar';
            } else {
                clearInterval(timerInterval);
                running = false;
                timerContainer.classList.remove('timer-running');
                startBtn.innerHTML = '<i class="fas fa-play"></i> Reanudar';
            }
        });

        stopBtn.addEventListener('click', () => {
            if (running) {
                clearInterval(timerInterval);
                running = false;
                addLap();
                timerContainer.classList.remove('timer-running');
                startBtn.innerHTML = '<i class="fas fa-play"></i> Iniciar';
            }
        });

        resetBtn.addEventListener('click', () => {
            clearInterval(timerInterval);
            running = false;
            elapsedTime = 0;
            display.textContent = '00:00:00';
            laps = [];
            updateLaps();
            timerContainer.classList.remove('timer-running');
            startBtn.innerHTML = '<i class="fas fa-play"></i> Iniciar';
        });

        function updateDisplay() {
            elapsedTime = Date.now() - startTime;
            display.textContent = formatTime(elapsedTime);
        }

        function addLap() {
            laps.push(elapsedTime);
            updateLaps();
        }

        function updateLaps() {
            const lapsContainer = document.querySelector('.timer-laps');
            lapsContainer.innerHTML = laps.map((lap, index) => `
                <div class="lap-item">
                    <span class="lap-number">#${index + 1}</span>
                    <span class="lap-time">${formatTime(lap)}</span>
                </div>
            `).join('');
        }
    </script>
{% endblock %}